name: Deploy on release

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  release:
    types: [published]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: echo ""
    # - uses: actions/setup-node@v4
    #   with:
    #     node-version: 20
    # - run: npm --prefix users ci
    # - run: npm --prefix questions ci
    # - run: npm --prefix gatewayservice ci
    # - run: npm --prefix webapp ci
    # - run: npm --prefix users test -- --coverage
    # - run: npm --prefix questions test -- --coverage
    # - run: npm --prefix gatewayservice test -- --coverage
    # - run: npm --prefix webapp test -- --coverage
    # - name: Analyze with SonarCloud
    #   uses: sonarsource/sonarcloud-github-action@master
    #   env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  e2e-tests:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: echo ""
    # - uses: actions/setup-node@v4
    #   with:
    #     node-version: 20
    # - run: npm --prefix users install
    # - run: npm --prefix questions install
    # - run: npm --prefix gatewayservice install
    # - run: npm --prefix webapp install
    # - run: npm --prefix webapp run build
    # - run: npm --prefix webapp run test:e2e
  # docker-push-users:
  #   name: Push users Docker Image to GitHub Packages
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     packages: write
  #   needs: [unit-tests]
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Publish to Registry
  #     uses: elgohr/Publish-Docker-Github-Action@v5
  #     with:
  #       name: arquisoft/wichat_es1a/users
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #       registry: ghcr.io
  #       workdir: users
  # docker-push-questions:
  #   name: Push questions Docker Image to GitHub Packages
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     packages: write
  #   needs: [unit-tests]
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Publish to Registry
  #     uses: elgohr/Publish-Docker-Github-Action@v5
  #     with:
  #       name: arquisoft/wichat_es1a/questions
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #       registry: ghcr.io
  #       workdir: questions
  # docker-push-gatewayservice:
  #   name: Push gateway service Docker Image to GitHub Packages
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     packages: write
  #   needs: [unit-tests]
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Publish to Registry
  #     uses: elgohr/Publish-Docker-Github-Action@v5
  #     with:
  #       name: arquisoft/wichat_es1a/gateway-service
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #       registry: ghcr.io
  #       workdir: gatewayservice
  docker-push-webapp:
    name: Push webapp Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [unit-tests]
    steps:
    - uses: actions/checkout@v4

    - name: Set env
      run: echo "REACT_APP_IP=${{ secrets.DEPLOY_HOST }}" > webapp/.env
        cat webapp/.env ; ls webapp

    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
          name: arquisoft/wichat_es1a/web-app
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: webapp
  # docker-push-llmservice:
  #   name: Push llm service Docker Image to GitHub Packages
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     packages: write
  #   needs: [unit-tests]
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Publish to Registry
  #     uses: elgohr/Publish-Docker-Github-Action@v5
  #     with:
  #       name: arquisoft/wichat_es1a/llm-service
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #       registry: ghcr.io
  #       workdir: llmservice
  deploy:
      name: Deploy over SSH
      runs-on: ubuntu-latest
      # needs: [docker-push-users,docker-push-llmservice,docker-push-gatewayservice,docker-push-webapp]
      needs: [docker-push-webapp]
      steps:
        - name: Deploy over SSH
          uses: fifsky/ssh-action@master
          with:
            host: ${{ secrets.DEPLOY_HOST }}
            user: ${{ secrets.DEPLOY_USER }}
            pass: ${{ secrets.DEPLOY_KEY }}
            command: |
              echo "REACT_APP_IP=${{ secrets.DEPLOY_HOST }}" > env
              wget https://raw.githubusercontent.com/arquisoft/wichat_es1a/master/docker-compose.yml -O docker-compose.yml
              docker compose --profile dev down
              docker container stop $(docker container ls -qa)
              docker container rm $(docker container ls -qa)
              docker compose --profile dev up -d --pull always
