services:
  mongodb:
    container_name: mongodb
    image: mongo
    profiles: ["dev", "prod"]
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - mynetwork
    restart: always

  users:
    container_name: users
    image: ghcr.io/arquisoft/wichat_es1a/users:latest
    profiles: ["dev", "prod"]
    build: ./users
    ports:
      - "8001:8001"
    networks:
      - mynetwork
    volumes:
      - users_data:/var/
    restart: always

  questions:
      container_name: questions
      image: ghcr.io/arquisoft/wichat_es1a/questions:latest
      profiles: ["dev", "prod"]
      build: ./questions
      depends_on:
        - mongodb
      ports:
        - "8010:8010"
      networks:
        - mynetwork
      environment:
        DATABASE_URI: mongodb://mongodb:27017/questionDB
        TEST_DATABASE_URI: mongodb://mongodb:27017/test
      restart: always

  gatewayservice:
    container_name: gatewayservice
    image: ghcr.io/arquisoft/wichat_es1a/gateway-service:latest
    profiles: ["dev", "prod"]
    build: ./gatewayservice
    depends_on:
      - users
      - questions
    ports:
      - "8000:8000"
    networks:
      - mynetwork
    environment:
      USER_SERVICE_URL: http://users:8001
      QUESTION_SERVICE_URL: http://questions:8010
    restart: always

  llmservice:
    container_name: llmservice-wichat_es1a
    image: ghcr.io/arquisoft/wichat_es1a/llm-service:latest
    profiles: ["dev", "prod"]
    build: ./llmservice
    ports:
      - "8003:8003"
    networks:
      - mynetwork

  webapp:
    container_name: webapp
    image: ghcr.io/arquisoft/wichat_es1a/web-app:latest
    profiles: ["dev", "prod"]
    build: 
      context: ./webapp
      args:
        REACT_APP_IP: ${IP}
    depends_on:
      - gatewayservice
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    restart: always


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    profiles: ["dev", "prod"]
    networks:
      - mynetwork
    volumes:
      - ./gatewayservice/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - gatewayservice
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    profiles: ["dev", "prod"]
    networks:
      - mynetwork
    volumes:
      - grafana_data:/var/lib/grafana
      - ./gatewayservice/monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SERVER_HTTP_PORT=9091
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "9091:9091"
    depends_on:
      - prometheus
    restart: always

volumes:
  users_data:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  mynetwork:
    driver: bridge
